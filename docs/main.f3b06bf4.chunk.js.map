{"version":3,"sources":["pages/Language/styles.js","pages/Language/model.js","pages/Language/index.jsx","serviceWorker.js","index.js"],"names":["Container","styled","div","Title","h1","Line","Header","langLocal","localStorage","getItem","lang","undefined","JSON","parse","getData","text","encodeURIComponent","App","props","handleSave","document","getElementById","style","display","language","state","sort","a","b","grp","tag","pt","stringify","reduce","p","c","en","es","pt_csharp","en_csharp","es_csharp","href","setItem","uploadData","langModel","handleInputChange","bind","handleAddTag","handleUpload","handleTextareaChange","handleCreateClick","e","this","setState","map","l","target","name","value","id","Math","floor","random","line","window","prepareWords","split","className","type","onClick","borderRadius","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","download","data-target","key","width","height","onChange","required","autoComplete","autoCorrect","placeholder","tabIndex","role","aria-hidden","data-dismiss","aria-label","rows","React","Component","Boolean","location","hostname","match","ReactDOM","render","Language","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3b06bf4.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div``;\r\nexport const Title = styled.h1``;\r\nexport const Line = styled.div`\r\n  padding-bottom: 2px;\r\n  font-weight: bold;\r\n`;\r\nexport const Header = styled.div`\r\n  background: #333;\r\n`;","var langLocal = localStorage.getItem('lang');\r\n\r\nexport const lang = langLocal !== undefined && langLocal !== null ? JSON.parse(langLocal) : [\r\n  {\r\n    \"id\": 1,\r\n    \"tag\": \"Enter\",\r\n    \"grp\": \"Buttons\",\r\n    \"en\": \"Enter\",\r\n    \"pt\": \"Entrar\",\r\n    \"es\": \"Entrar\",\r\n  }\r\n]\r\n","import React from 'react';\r\nimport { Container, Title, Line, Header } from './styles.js';\r\nimport { lang as langModel } from './model';\r\n\r\nconst getData = (text) => {\r\n  return \"text/json;charset=utf-8,\" + encodeURIComponent(text);\r\n}\r\n\r\nconst getNewId = () => (Math.floor(Math.random() * 10000));\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      uploadData: \"\",\r\n      language: [...langModel.sort((a, b) => (a.grp + a.tag < b.grp + b.tag ? -1 : 1))]\r\n    }\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleAddTag = this.handleAddTag.bind(this);\r\n    this.handleUpload = this.handleUpload.bind(this);\r\n    this.handleTextareaChange = this.handleTextareaChange.bind(this);\r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.handleCreateClick = this.handleCreateClick.bind(this);\r\n  }\r\n\r\n  handleInputChange(tag, e) {\r\n    this.setState({\r\n      ...this.state,\r\n      language: [\r\n        ...this.state.language.map(l => {\r\n          return l.tag === tag ? { ...l, [e.target.name]: e.target.value } : l\r\n        })\r\n      ]\r\n    });\r\n  }\r\n\r\n  handleAddTag() {\r\n    var id = getNewId();\r\n    this.setState({\r\n      ...this.state,\r\n      language: [\r\n        ...this.state.language,\r\n        {\r\n          \"id\": id,\r\n          \"tag\": \"new_\" + id,\r\n          \"grp\": \"\",\r\n          \"pt\": \"\",\r\n          \"en\": \"\",\r\n          \"es\": \"\",\r\n        }\r\n      ]\r\n    })\r\n  }\r\n\r\n  handleSave = () => {\r\n    var obj_files_download = document.getElementById('files_download');\r\n    obj_files_download.style.display = \"inherit\";\r\n\r\n    var language = this.state.language.sort((a, b) => (a.grp + a.tag < b.grp + b.tag ? -1 : 1));\r\n\r\n    var pt = `const locale = ${JSON.stringify(language.reduce((p, c) => ({ ...p, [c.tag]: c.pt }), {}), null, 2)}; \\nexport default locale;`;\r\n    var en = `const locale = ${JSON.stringify(language.reduce((p, c) => ({ ...p, [c.tag]: c.en }), {}), null, 2)}; \\nexport default locale;`;\r\n    var es = `const locale = ${JSON.stringify(language.reduce((p, c) => ({ ...p, [c.tag]: c.es }), {}), null, 2)}; \\nexport default locale;`;\r\n\r\n    var pt_csharp = `${language.reduce((p, c) => (`${p}${c.tag}\\t${c.pt}\\t${c.grp}\\n`), \"\")}`;\r\n    var en_csharp = `${language.reduce((p, c) => (`${p}${c.tag}\\t${c.en}\\t${c.grp}\\n`), \"\")}`;\r\n    var es_csharp = `${language.reduce((p, c) => (`${p}${c.tag}\\t${c.es}\\t${c.grp}\\n`), \"\")}`;\r\n\r\n    document.getElementById('download_default').href = 'data:' + getData(JSON.stringify(language));\r\n\r\n    document.getElementById('download_pt').href = 'data:' + getData(pt);\r\n    document.getElementById('download_en').href = 'data:' + getData(en);\r\n    document.getElementById('download_es').href = 'data:' + getData(es);\r\n\r\n    document.getElementById('download_pt_csharp').href = 'data:' + getData(pt_csharp);\r\n    document.getElementById('download_en_csharp').href = 'data:' + getData(en_csharp);\r\n    document.getElementById('download_es_csharp').href = 'data:' + getData(es_csharp);\r\n\r\n    localStorage.setItem('lang', JSON.stringify(this.state.language));\r\n  }\r\n\r\n  handleUpload() {\r\n    this.setState({\r\n      ...this.state,\r\n      language: JSON.parse(this.state.uploadData),\r\n      uploadData: \"\",\r\n    })\r\n  }\r\n\r\n  handleTextareaChange(e) {\r\n    this.setState({\r\n      ...this.state,\r\n      uploadData: e.target.value\r\n    });\r\n  }\r\n\r\n  handleCreateClick(line) {\r\n    if (line.en === \"\" || line.en === undefined) { return; }\r\n    var tag = window.prepareWords(line.en.split(\" \"));\r\n    this.setState({\r\n      ...this.state,\r\n      language: [\r\n        ...this.state.language.map(l => {\r\n          return l.id === line.id ? { ...l, tag } : l\r\n        })\r\n      ]\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { language, uploadData } = this.state;\r\n\r\n    return (\r\n      <Container id=\"container\" className=\"container\">\r\n        <Title>Translation Generator</Title>\r\n        <div className=\"btn-group\">\r\n          <button type=\"button\" className=\"btn btn-xs btn-success\" onClick={() => this.handleSave()}>Save</button>\r\n          <button type=\"button\" className=\"btn btn-xs btn-primary\" onClick={() => this.handleAddTag()}>Add tag</button>\r\n          <div className=\"dropdown\" style={{ display: \"none\" }} id=\"files_download\">\r\n            <button style={{ borderRadius: 0 }}\r\n              className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\r\n              data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Downloads</button>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n              <a href=\"#/\" id=\"download_default\" className=\"dropdown-item\" download=\"default.json\">Default</a>\r\n              <div className=\"dropdown-divider\"></div>\r\n              <h6 className=\"dropdown-header\">Javascript</h6>\r\n              <a href=\"#/\" id=\"download_en\" className=\"dropdown-item\" download=\"en-US.js\">English</a>\r\n              <a href=\"#/\" id=\"download_pt\" className=\"dropdown-item\" download=\"pt-BR.js\">Português</a>\r\n              <a href=\"#/\" id=\"download_es\" className=\"dropdown-item\" download=\"es-ES.js\">Español</a>\r\n              <div className=\"dropdown-divider\"></div>\r\n              <h6 className=\"dropdown-header\">C#</h6>\r\n              <a href=\"#/\" id=\"download_en_csharp\" className=\"dropdown-item\" download=\"en-US(csharp).txt\">English</a>\r\n              <a href=\"#/\" id=\"download_pt_csharp\" className=\"dropdown-item\" download=\"pt-BR(csharp).txt\">Português</a>\r\n              <a href=\"#/\" id=\"download_es_csharp\" className=\"dropdown-item\" download=\"es-ES(csharp).txt\">Español</a>\r\n            </div>\r\n          </div>\r\n          <a href=\"#/\" id=\"download\" className=\"btn btn-xs btn-info\" style={{ display: \"none\" }} download=\"language.json\">Download</a>\r\n          <button type=\"button\" className=\"btn btn-xs btn-primary\" data-toggle=\"modal\" data-target=\"#modalUpload\">Upload</button>\r\n        </div>\r\n        <br />\r\n        <br />\r\n\r\n        <Line className=\"row col lang-line\">\r\n          <Header className=\"col\">Tag</Header>\r\n          <Header className=\"col\">Group</Header>\r\n          <Header className=\"col\">English</Header>\r\n          <Header className=\"col\">Português</Header>\r\n          <Header className=\"col\">Español</Header>\r\n        </Line>\r\n\r\n        <form className=\"was-validated lang-form\">\r\n          {language.map(l => (\r\n            <Line className=\"row col lang-line\" key={l.id}>\r\n              <div className=\"col\">\r\n                <div className=\"btn-group\" style={{ width: \"100%\", height: \"25px\" }}>\r\n                  <input type=\"text\"\r\n                    value={l.tag}\r\n                    onChange={(e) => this.handleInputChange(l.tag, e)}\r\n                    name=\"tag\"\r\n                    required=\"required\"\r\n                    className=\"form-control\"\r\n                    autoComplete=\"false\"\r\n                    autoCorrect=\"false\"\r\n                    placeholder=\"Tag\" />\r\n                  <button onClick={() => this.handleCreateClick(l)} className=\"btn btn-sm btn-secondary\" style={{ borderRadius: 0 }}>New</button>\r\n                </div>\r\n              </div>\r\n              <div className=\"col\">\r\n                <input type=\"text\"\r\n                  value={l.grp}\r\n                  onChange={(e) => this.handleInputChange(l.tag, e)}\r\n                  name=\"grp\"\r\n                  required=\"required\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"false\"\r\n                  autoCorrect=\"false\"\r\n                  placeholder=\"Group\" />\r\n              </div>\r\n              <div className=\"col\">\r\n                <input type=\"text\"\r\n                  value={l.en}\r\n                  onChange={(e) => this.handleInputChange(l.tag, e)}\r\n                  name=\"en\"\r\n                  required=\"required\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"false\"\r\n                  autoCorrect=\"false\"\r\n                  placeholder=\"English\" />\r\n              </div>\r\n              <div className=\"col\">\r\n                <input type=\"text\"\r\n                  value={l.pt}\r\n                  onChange={(e) => this.handleInputChange(l.tag, e)}\r\n                  name=\"pt\"\r\n                  required=\"required\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"false\"\r\n                  autoCorrect=\"false\"\r\n                  placeholder=\"Português\" />\r\n              </div>\r\n              <div className=\"col\">\r\n                <input type=\"text\"\r\n                  value={l.es}\r\n                  onChange={(e) => this.handleInputChange(l.tag, e)}\r\n                  name=\"es\"\r\n                  required=\"required\"\r\n                  className=\"form-control\"\r\n                  autoComplete=\"false\"\r\n                  autoCorrect=\"false\"\r\n                  placeholder=\"Español\" />\r\n              </div>\r\n            </Line>\r\n          ))}\r\n        </form>\r\n\r\n        <div className=\"modal fade\" id=\"modalUpload\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Upload language file</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Fechar\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <textarea rows=\"10\" className=\"form-control\"\r\n                  onChange={this.handleTextareaChange}\r\n                  value={uploadData}\r\n                  placeholder='[{\"tag\":\"Enter\",\"grp\":\"Buttons\",\"en\":\"Enter\",\"pt\":\"Entrar\",\"es\":\"Entrar\"}]'\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\r\n                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={() => this.handleUpload()}>Upload</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Language from './pages/Language/index';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Language />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}