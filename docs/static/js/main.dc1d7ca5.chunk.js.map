{"version":3,"sources":["components/Footer.jsx","components/ImportForm.jsx","components/NavHeader.jsx","components/Table.jsx","storage/TranslateStorage.js","pages/Language/index.jsx","serviceWorker.js","index.js"],"names":["Footer","hasChanges","onAddLineClick","onSaveClick","className","role","type","onClick","href","ImportForm","contentToImport","onImportContentChange","onImportClick","id","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","rows","onChange","value","placeholder","NavHeader","files","onNewClick","onPackJSClick","onPackCSharpClick","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-current","style","boxShadow","default","data","download","filename","name","javascript","map","js","index","key","csharp","cs","target","rel","Table","content","onCreateClick","onDeleteClick","onFormChange","it","required","autoComplete","autoCorrect","tag","e","en","pt","es","list","grp","defaultStorage","languages","file","groups","browserStorage","localStorage","getItem","currentStorage","JSON","parse","getNewId","Math","floor","random","getData","text","json","encodeURIComponent","setLanguageFile","filter","Translate","window","confirm","clear","sortedContent","sort","a","b","json_default","stringify","data_default","forEach","lang","reduce","p","c","createExportJS","createExportCSharp","data_js","data_cs","setItem","lastGroup","length","field","Language","useState","setContent","setFiles","setHasChanges","setContentToImport","handleImportClick","handleSaveClick","myModalEl","document","getElementById","bootstrap","Modal","getInstance","hide","hideImportModal","StateChanged","click","item","prepareWords","split","scrollTo","body","scrollHeight","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc1d7ca5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = ({ hasChanges, onAddLineClick, onSaveClick }) => (\n  <footer className=\"footer fixed-bottom py-3 bg-light\">\n    <div className=\"container d-flex justify-content-between\">\n      <div className=\"btn-group btn-group-sm\" role=\"group\">\n        <button type=\"button\" className=\"btn btn-dark\" onClick={onAddLineClick}>\n          Add line\n        </button>\n        <button\n          type=\"button\"\n          className={hasChanges ? 'btn btn-danger' : 'btn btn-secondary'}\n          onClick={onSaveClick}>\n          Save\n        </button>\n      </div>\n      <div className=\"pt-1 small\">\n        Created by{' '}\n        <a href=\"https://github.com/angelitocsg/TranslationGenerator\">Angelito Casagrande</a>\n      </div>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\n\nconst ImportForm = ({ contentToImport, onImportContentChange, onImportClick }) => (\n  <div\n    className=\"modal fade\"\n    id=\"importModal\"\n    tabIndex=\"-1\"\n    aria-labelledby=\"importModalLabel\"\n    aria-hidden=\"true\">\n    <div className=\"modal-dialog modal-dialog-centered\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header text-light bg-dark\">\n          <h5 className=\"modal-title\" id=\"importModalLabel\">\n            Import language file\n          </h5>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"></button>\n        </div>\n        <div className=\"modal-body\">\n          <textarea\n            rows=\"10\"\n            className=\"form-control\"\n            onChange={onImportContentChange}\n            value={contentToImport}\n            placeholder='[{\"tag\":\"Enter\",\"grp\":\"Buttons\",\"en\":\"Enter\",\"pt\":\"Entrar\",\"es\":\"Entrar\"}]'></textarea>\n        </div>\n        <div className=\"modal-footer bg-light\">\n          <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n            Close\n          </button>\n          <button type=\"button\" className=\"btn btn-dark\" onClick={onImportClick}>\n            Import\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default ImportForm;\n","import React from 'react';\n\nconst NavHeader = ({\n  files,\n  hasChanges,\n  onNewClick,\n  onSaveClick,\n  onPackJSClick,\n  onPackCSharpClick,\n}) => (\n  <header>\n    <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <div className=\"container\">\n        <a className=\"navbar-brand\" href=\"/#\">\n          Translation Generator\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarCollapse\"\n          aria-controls=\"navbarCollapse\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"d-flex\">\n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-md-0\">\n              <li className=\"nav-item active\">\n                <a className=\"nav-link\" aria-current=\"page\" href=\"/#\" onClick={onNewClick}>\n                  New\n                </a>\n              </li>\n              <li className=\"nav-item active\">\n                <a\n                  className={hasChanges ? 'nav-link bg-danger' : 'nav-link'}\n                  aria-current=\"page\"\n                  href=\"/#\"\n                  onClick={onSaveClick}>\n                  Save\n                </a>\n              </li>\n              <li className=\"nav-item active\">\n                <a\n                  className=\"nav-link\"\n                  aria-current=\"page\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#importModal\"\n                  href=\"/#\">\n                  Import\n                </a>\n              </li>\n              <li className=\"nav-item dropdown\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-link  nav-link dropdown-toggle\"\n                  style={{ boxShadow: 'none' }}\n                  id=\"navbarDarkDropdownMenuLink\"\n                  data-bs-toggle=\"dropdown\"\n                  aria-expanded=\"false\">\n                  Export\n                </button>\n                <ul\n                  className=\"dropdown-menu dropdown-menu-dark\"\n                  aria-labelledby=\"navbarDarkDropdownMenuLink\">\n                  <li>\n                    <a\n                      id=\"download_default\"\n                      className={files?.default.data ? 'dropdown-item' : 'dropdown-item disabled'}\n                      href={files?.default.data}\n                      download={files?.default.filename}>\n                      {files?.default.name}\n                    </a>\n                  </li>\n                  <li>\n                    <hr className=\"dropdown-divider\" />\n                  </li>\n\n                  <li>\n                    <h6 className=\"dropdown-header\">JavaScript</h6>\n                  </li>\n                  <li>\n                    <a\n                      className={files?.default.data ? 'dropdown-item' : 'dropdown-item disabled'}\n                      href=\"/#\"\n                      onClick={onPackJSClick}>\n                      Pack JS (with default)\n                    </a>\n                  </li>\n                  {files?.javascript?.map((js, index) => (\n                    <li key={index}>\n                      <a\n                        id={`download_${js.id}`}\n                        className=\"dropdown-item\"\n                        href={js.data}\n                        download={js.filename}>\n                        {js.name}\n                      </a>\n                    </li>\n                  ))}\n\n                  <li>\n                    <hr className=\"dropdown-divider\" />\n                  </li>\n\n                  <li>\n                    <h6 className=\"dropdown-header\">C# Resources</h6>\n                  </li>\n                  <li>\n                    <a\n                      className={files?.default.data ? 'dropdown-item' : 'dropdown-item disabled'}\n                      href=\"/#\"\n                      onClick={onPackCSharpClick}>\n                      Pack C# (with default)\n                    </a>\n                  </li>\n\n                  {files?.csharp?.map((cs, index) => (\n                    <li key={index}>\n                      <a\n                        id={`download_${cs.id}_csharp`}\n                        className=\"dropdown-item\"\n                        href={cs.data}\n                        download={cs.filename}>\n                        {cs.name}\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n              <li className=\"nav-item active\">\n                <a\n                  className=\"nav-link\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://github.com/angelitocsg/TranslationGenerator\">\n                  GitHub\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </nav>\n  </header>\n);\n\nexport default NavHeader;\n","import React from 'react';\n\nconst Table = ({ content, onChange, onCreateClick, onDeleteClick, onFormChange }) => {\n  return (\n    <form className=\"needs-validation was-validated\" onChange={onFormChange}>\n      <table className=\"table table-borderless table-sm\">\n        <thead>\n          <tr>\n            <th>Tag name</th>\n            <th>English</th>\n            <th>Português</th>\n            <th>Español</th>\n            <th>Group</th>\n          </tr>\n        </thead>\n        <tbody>\n          {content.map((it, index) => (\n            <tr key={index}>\n              <td>\n                <div className=\"input-group input-group-sm\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-danger btn-sm\"\n                    onClick={() => onDeleteClick(it.id)}>\n                    Delete\n                  </button>\n                  <input\n                    required=\"required\"\n                    autoComplete=\"false\"\n                    autoCorrect=\"false\"\n                    type=\"text\"\n                    className=\"form-control form-control-sm\"\n                    placeholder=\"Tag without special chars\"\n                    name=\"tag\"\n                    value={it.tag}\n                    onChange={(e) => onChange(e, it.id)}\n                  />\n                </div>\n              </td>\n              <td>\n                <div className=\"input-group input-group-sm\">\n                  <input\n                    required=\"required\"\n                    autoComplete=\"false\"\n                    autoCorrect=\"false\"\n                    type=\"text\"\n                    className=\"form-control form-control-sm\"\n                    placeholder=\"English\"\n                    name=\"en\"\n                    value={it.en}\n                    onChange={(e) => onChange(e, it.id)}\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-dark btn-sm\"\n                    onClick={() => onCreateClick(it)}>\n                    Create\n                  </button>\n                </div>\n              </td>\n              <td>\n                <div className=\"input-group input-group-sm\">\n                  <input\n                    required=\"required\"\n                    autoComplete=\"false\"\n                    autoCorrect=\"false\"\n                    type=\"text\"\n                    className=\"form-control form-control-sm\"\n                    placeholder=\"Português\"\n                    name=\"pt\"\n                    value={it.pt}\n                    onChange={(e) => onChange(e, it.id)}\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-sm btn-outline-secondary\"\n                    onClick={() => onChange({ target: { name: 'pt', value: '-' } }, it.id)}>\n                    Empty\n                  </button>\n                </div>\n              </td>\n              <td>\n                <div className=\"input-group input-group-sm\">\n                  <input\n                    required=\"required\"\n                    autoComplete=\"false\"\n                    autoCorrect=\"false\"\n                    type=\"text\"\n                    className=\"form-control form-control-sm\"\n                    placeholder=\"Español\"\n                    name=\"es\"\n                    value={it.es}\n                    onChange={(e) => onChange(e, it.id)}\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-sm btn-outline-secondary\"\n                    onClick={() => onChange({ target: { name: 'es', value: '-' } }, it.id)}>\n                    Empty\n                  </button>\n                </div>\n              </td>\n              <td>\n                <input\n                  required=\"required\"\n                  autoComplete=\"false\"\n                  autoCorrect=\"false\"\n                  className=\"form-control form-control-sm\"\n                  list=\"datalistOptions\"\n                  placeholder=\"Type group name...\"\n                  name=\"grp\"\n                  value={it.grp}\n                  onChange={(e) => onChange(e, it.id)}\n                />\n                <datalist id=\"datalistOptions\">\n                  <option value=\"Buttons\" />\n                  <option value=\"Messages\" />\n                  <option value=\"Text block\" />\n                </datalist>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </form>\n  );\n};\n\nexport default Table;\n","const defaultStorage = {\n  content: [\n    {\n      id: 100,\n      tag: 'Enter',\n      grp: 'Buttons',\n      en: 'Enter',\n      pt: 'Entrar',\n      es: 'Entrar',\n    },\n  ],\n  languages: [\n    {\n      id: 'en',\n      file: 'en-US',\n      name: 'English',\n    },\n    {\n      id: 'pt',\n      file: 'pt-BR',\n      name: 'Portguês',\n    },\n    {\n      id: 'es',\n      file: 'es-ES',\n      name: 'Español',\n    },\n  ],\n  groups: ['Texts', 'Messages', 'Buttons'],\n  files: {\n    default: { name: 'Default (JSON)', filename: 'default.json', data: null },\n    javascript: [],\n    csharp: [],\n  },\n};\n\nconst browserStorage = localStorage.getItem('Translate');\nlet currentStorage = { ...defaultStorage };\n\nif (browserStorage !== null) {\n  currentStorage = JSON.parse(browserStorage);\n}\n\n// ####################### PRIVATE #######################\n\nconst getNewId = () => Math.floor(Math.random() * 10000);\n\nconst getData = (text, json = true) => {\n  return json\n    ? 'text/json;charset=utf-8,' + encodeURIComponent(text)\n    : 'text/plain;charset=utf-8,' + encodeURIComponent(text);\n};\n\nconst createExportJS = (data, lang) =>\n  `const locale = ${JSON.stringify(\n    data.reduce((p, c) => ({ ...p, [c.tag]: c[lang] }), {}),\n    null,\n    2,\n  )}; \\nexport default locale;`;\n\nconst createExportCSharp = (data, lang) =>\n  `${data.reduce((p, c) => `${p}${c.tag}\\t${c[lang]}\\t${c.grp}\\n`, '')}`;\n\nconst setDefaultFile = (content) => {\n  currentStorage.files.default.data = content;\n};\n\nconst setLanguageFile = (type, content) => {\n  var files = currentStorage.files[type].filter((it) => it.name !== content.name);\n\n  currentStorage.files[type] = [...files, { ...content }];\n};\n\n// ####################### PUBLIC #######################\n\nconst ClearStorage = () => {\n  localStorage.clear();\n  currentStorage = { ...defaultStorage };\n};\n\nconst NewTable = () => {\n  if (window.confirm('Clear all and create a new tag table?')) {\n    ClearStorage();\n  }\n};\n\nconst SaveTable = () => {\n  var sortedContent = currentStorage.content.sort((a, b) =>\n    `${a.grp}-${a.tag}` < `${b.grp}-${b.tag}` ? -1 : 1,\n  );\n\n  var json_default = JSON.stringify(sortedContent);\n  var data_default = `data: ${getData(json_default)}`;\n  setDefaultFile(data_default);\n\n  currentStorage.languages.forEach((lang) => {\n    var js = createExportJS(sortedContent, lang.id);\n    var cs = createExportCSharp(sortedContent, lang);\n    var data_js = `data: ${getData(js)}`;\n    var data_cs = `data: ${getData(cs, false)}`;\n    setLanguageFile('javascript', {\n      id: lang.id,\n      name: lang.name,\n      filename: `${lang.file}.js`,\n      data: data_js,\n    });\n    setLanguageFile('csharp', {\n      id: lang.id,\n      name: lang.name,\n      filename: `${lang.file}(csharp).txt`,\n      data: data_cs,\n    });\n  });\n\n  localStorage.setItem('Translate', JSON.stringify(currentStorage));\n};\n\nconst ImportTable = (contentToImport) => {\n  currentStorage.content = JSON.parse(contentToImport);\n};\n\nconst ExportTable = () => {};\n\nconst AddLine = (grp = '') => {\n  var id = getNewId();\n  var lastGroup = currentStorage.content[currentStorage.content.length - 1].grp;\n  currentStorage.content = [\n    ...currentStorage.content,\n    { id, tag: `new_${id}`, grp: lastGroup, en: '', pt: '', es: '' },\n  ];\n};\n\nconst UpdateLine = (id, field, value) => {\n  currentStorage.content = currentStorage.content.map((it) =>\n    it.id === id ? { ...it, [field]: value } : it,\n  );\n};\n\nconst DeleteLine = (id) => {\n  currentStorage.content = currentStorage.content.filter((it) => it.id !== id);\n  if (currentStorage.content.length === 0) currentStorage.content = defaultStorage.content;\n};\n\nconst GetContent = () => currentStorage.content;\nconst GetLanguages = () => currentStorage.languages;\nconst GetGroups = () => currentStorage.groups;\nconst GetFiles = () => currentStorage.files;\nconst ClearFiles = () => (currentStorage.files = defaultStorage.files);\n\nexport const Translate = {\n  NewTable,\n  SaveTable,\n  ImportTable,\n  ExportTable,\n  AddLine,\n  UpdateLine,\n  DeleteLine,\n  GetContent,\n  GetLanguages,\n  GetGroups,\n  GetFiles,\n  ClearFiles,\n};\n","import React, { useState } from 'react';\n\nimport Footer from '../../components/Footer';\nimport ImportForm from '../../components/ImportForm';\nimport NavHeader from '../../components/NavHeader';\nimport Table from '../../components/Table';\nimport { Translate } from '../../storage/TranslateStorage';\n\nconst Language = () => {\n  const [content, setContent] = useState(Translate.GetContent());\n  const [files, setFiles] = useState(Translate.GetFiles());\n  const [hasChanges, setHasChanges] = useState(false);\n  const [contentToImport, setContentToImport] = useState('');\n\n  const hideImportModal = () => {\n    var myModalEl = document.getElementById('importModal');\n    var modal = window.bootstrap.Modal.getInstance(myModalEl);\n    modal.hide();\n  };\n\n  const handleNewClick = () => {\n    Translate.NewTable();\n    setContent(Translate.GetContent());\n    setFiles(Translate.GetFiles());\n  };\n\n  const handleImportClick = () => {\n    if (contentToImport === '') return;\n    Translate.ImportTable(contentToImport);\n    handleSaveClick();\n    hideImportModal();\n    setContentToImport('');\n  };\n\n  const handleImportContentChange = (e) => {\n    var content = e.target.value;\n    setContentToImport(content);\n  };\n\n  const handleSaveClick = () => {\n    Translate.SaveTable();\n    setContent(Translate.GetContent());\n    setFiles(Translate.GetFiles());\n    setHasChanges(false);\n  };\n\n  const handleFieldChange = (e, id) => {\n    var field = e.target.name;\n    var value = e.target.value;\n    Translate.UpdateLine(id, field, value);\n    setContent(Translate.GetContent());\n  };\n\n  const handlePackJSClick = () => {\n    document.getElementById('download_default').click();\n    var languages = Translate.GetLanguages();\n    languages.forEach((lang) => document.getElementById(`download_${lang.id}`).click());\n  };\n  const handlePackCSharpClick = () => {\n    document.getElementById('download_default').click();\n    var languages = Translate.GetLanguages();\n    languages.forEach((lang) => document.getElementById(`download_${lang.id}_csharp`).click());\n  };\n\n  const handleAddLine = () => {\n    Translate.AddLine();\n    setContent(Translate.GetContent());\n    window.scrollTo(0, document.body.scrollHeight);\n    StateChanged();\n  };\n\n  const handleCreate = (item) => {\n    var tag = window.prepareWords(item.en.split(' '));\n    Translate.UpdateLine(item.id, 'tag', tag);\n    setContent(Translate.GetContent());\n    StateChanged();\n  };\n\n  const handleDelete = (id) => {\n    Translate.DeleteLine(id);\n    setContent(Translate.GetContent());\n    StateChanged();\n  };\n\n  const handleFormChange = () => {\n    StateChanged();\n  };\n\n  const StateChanged = () => {\n    Translate.ClearFiles();\n    setFiles(Translate.GetFiles());\n    setHasChanges(true);\n  };\n\n  return (\n    <>\n      <NavHeader\n        files={files}\n        hasChanges={hasChanges}\n        onNewClick={handleNewClick}\n        onImportClick={handleImportClick}\n        onSaveClick={handleSaveClick}\n        onPackJSClick={handlePackJSClick}\n        onPackCSharpClick={handlePackCSharpClick}></NavHeader>\n      <main className=\"flex-shrink-0\">\n        <div className=\"container\">\n          <Table\n            content={content}\n            onChange={handleFieldChange}\n            onCreateClick={handleCreate}\n            onDeleteClick={handleDelete}\n            onFormChange={handleFormChange}></Table>\n          <br />\n          <br />\n          <br />\n          <br />\n        </div>\n      </main>\n      <ImportForm\n        contentToImport={contentToImport}\n        onImportContentChange={handleImportContentChange}\n        onImportClick={handleImportClick}></ImportForm>\n      <Footer\n        hasChanges={hasChanges}\n        onAddLineClick={handleAddLine}\n        onSaveClick={handleSaveClick}></Footer>\n    </>\n  );\n};\n\nexport default Language;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Language from './pages/Language/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Language />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}